https://www.mathworks.com/help/optim/ug/passing-extra-parameters.html

Anonymous Functions
To pass parameters using anonymous functions:

Write a file containing the following code:
function y = parameterfun(x,a,b,c)
y = (a - b*x(1)^2 + x(1)^4/3)*x(1)^2 + x(1)*x(2) + ...
    (-c + c*x(2)^2)*x(2)^2;
Assign values to the parameters and define a function handle f to an anonymous function by entering the following commands at the MATLAB® prompt:
a = 4; b = 2.1; c = 4; % Assign parameter values
x0 = [0.5,0.5];
f = @(x)parameterfun(x,a,b,c);
Call the solver fminunc with the anonymous function:
[x,fval] = fminunc(f,x0)
The following output is displayed in the command window:
Local minimum found.

Optimization completed because the size of the gradient is less than
the default value of the function tolerance.

x =
   -0.0898    0.7127

fval =
   -1.0316
Note:   The parameters passed in the anonymous function are those that exist at the time the anonymous function is created. Consider the example
a = 4; b = 2.1; c = 4;
f = @(x)parameterfun(x,a,b,c)
Suppose you subsequently change, a to 3 and run
[x,fval] = fminunc(f,x0)
You get the same answer as before, since parameterfun uses a = 4, the value when f was created.
To change the parameters that are passed to the function, renew the anonymous function by reentering it:
a = 3;
f = @(x)parameterfun(x,a,b,c)
